from collections import deque

def solution(land):
    n = len(land)
    m = len(land[0])
        
    mx = [0, 0, 1, -1]
    my = [1, -1, 0, 0]
    
    visited = [[False] * m for _ in range(n)]
    oil = [0] * m
    
    def bfs(x, y):
        queue = deque()
        queue.append((x, y))
        count = 1
        visited[y][x] = True
        oil_check = {x}
        while queue:
            x, y = queue.popleft()
            for k in range(4):                                    
                nx = x + mx[k]
                ny = y + my[k]
                if 0 <= nx < m and 0 <= ny < n:
                    if not visited[ny][nx] and land[ny][nx] == 1:
                        visited[ny][nx] = True 
                        queue.append((nx, ny))
                        count += 1
                        oil_check.add(nx)
        
        for o in oil_check:
            oil[o] += count
    
    for i in range(m):
        for j in range(n):
            if land[j][i] == 1 and not visited[j][i]:
                bfs(i, j)
                
    return max(oil)