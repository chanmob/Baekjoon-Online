from collections import deque
import sys
import copy

input = sys.stdin.readline

N = int(input())
graph = [list(map(int, input().split())) for _ in range(N)]

mx = [0, 0, -1, 1]
my = [-1, 1, 0, 0]

max_value = 0

for g in graph:
    max_value = max(max_value, max(g))

def BFS(x, y, g):
    queue = deque()
    queue.append((x, y))
    while queue:
        x, y = queue.popleft()
        for i in range(4):
            nx = x + mx[i]
            ny = y + my[i]
            if 0 > nx or nx >= N or 0 > ny or ny >= N:
                continue
            if g[nx][ny] == 1:
                g[nx][ny] = 2
                queue.append((nx, ny))
                
result = 0

for i in range(max_value):
    temp_graph = copy.deepcopy(graph)
    temp_graph = [[0 if value <= i else 1 for value in row] for row in temp_graph]
    safe = 0
    for j in range(N):
        for k in range(N):
            if temp_graph[j][k] == 1:
                temp_graph[j][k] = 2
                safe += 1
                BFS(j, k, temp_graph)
    result = max(result, safe)
    
print(result)