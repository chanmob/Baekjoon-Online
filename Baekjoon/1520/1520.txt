import sys

m, n = map(int, sys.stdin.readline().split())
maps = [list(map(int, sys.stdin.readline().split())) for _ in range(m)]

dp = [[-1 for _ in range(n)] for _ in range(m)]

mx = [1, -1, 0, 0]
my = [0, 0, 1, -1]

def dfs(x, y):
    if x == n - 1 and y == m - 1:
        return 1
    if dp[y][x] != -1:
        return dp[y][x]
    
    dp[y][x] = 0
    for i in range(4):
        nx = x + mx[i]
        ny = y + my[i]
        if 0 <= nx < n and 0 <= ny < m:
            if maps[ny][nx] < maps[y][x]:
                dp[y][x] += dfs(nx, ny)
    
    return dp[y][x]

print(dfs(0, 0))