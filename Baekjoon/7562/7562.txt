from collections import deque
import sys

input = sys.stdin.readline

T = int(input())

mx = [2, 2, -2, -2, 1, 1, -1, -1]
my = [1, -1, 1, -1, 2, -2, 2, -2]

def BFS(x, y, gx, gy, L, chess):
    queue = deque()
    queue.append((x, y))
    while queue:
        x, y = queue.popleft()
        if x == gx and y == gy:
            return chess[x][y] - 1   
        for i in range(8):
            nx = x + mx[i]
            ny = y + my[i]
            if 0<=nx<L and 0<=ny<L and chess[nx][ny] == 0 :
                chess[nx][ny] = chess[x][y] + 1
                queue.append((nx,ny))
            
for _ in range(T):
    L = int(input())
    x, y = map(int, input().split())
    gx, gy = map(int, input().split())
    chess = [[0] * L for _ in range(L)]
    chess[x][y] = 1
    print(BFS(x, y, gx, gy, L, chess))