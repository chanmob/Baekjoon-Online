import sys
from collections import deque

input = sys.stdin.readline

k = int(input())

def bfs(start, state):
    queue = deque()
    queue.append(start)
    visit[start] = state
    
    while queue:
        x = queue.popleft()
        for i in graph[x]:
            if not visit[i]:
                queue.append(i)
                visit[i] = visit[x] * -1
            elif visit[i] == visit[x]:
                return False
    return True

for _ in range(k):
    v, e = map(int, input().split())
    graph = [[] for _ in range(v + 1)]
    visit = [False] * (v + 1)
    for _ in range(e):
        a, b = map(int, input().split())
        graph[a].append(b)
        graph[b].append(a)
    
    for i in range(1, v + 1):
        if not visit[i]:
            result = bfs(i, 1)
            if not result:
                break
    if result:
        print('YES')
    else:
        print('NO')