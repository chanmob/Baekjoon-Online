import sys

input = sys.stdin.readline

n = int(input())
num = list(map(int, input().split()))
cal = list(map(int, input().split()))

min_value = 1e9
max_value = -1e9

def dfs(depth, value, add, sub, mul, div):
  global min_value, max_value

  if depth == n:
    min_value = min(value, min_value)
    max_value = max(value, max_value)
    return

  if add:
    dfs(depth + 1, value + num[depth], add - 1, sub, mul, div)
  if sub:
    dfs(depth + 1, value - num[depth], add, sub - 1, mul, div)
  if mul:
    dfs(depth + 1, value * num[depth], add, sub, mul - 1, div)
  if div:
    dfs(depth + 1, int(value / num[depth]), add, sub, mul, div - 1)

dfs(1, num[0], cal[0], cal[1], cal[2], cal[3])
print(max_value)
print(min_value)