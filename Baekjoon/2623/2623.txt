import sys
import heapq

input = sys.stdin.readline

n, m = map(int, input().split())
singer = []
for i in range(m):
    s = list(map(int, input().split()))
    singer.append(s[1:])
    
indigree = [0] * (n + 1)
result = []
heap = []
graph = [[] for _ in range(n + 1)]

for s in singer:
    for i in range(len(s) - 1):
        graph[s[i]].append(s[i + 1])
        indigree[s[i + 1]] += 1
        
for i in range(1, n + 1):
    if indigree[i] == 0:
        heapq.heappush(heap, i)
    
while heap:
    r = heapq.heappop(heap)
    result.append(r)
    for g in graph[r]:
        indigree[g] -= 1
        if indigree[g] == 0:
            heapq.heappush(heap, g)

if len(result) != n:
    print(0)
else:
    for r in result:
        print(r)
    