import sys
from collections import deque

sys.setrecursionlimit(int(51e6))

input = sys.stdin.readline

n, m, r = map(int, input().split())

nodes = [[] for _ in range(n+1)]

for i in range(m):
  s, e = map(int, input().split())
  nodes[s].append(e)
  nodes[e].append(s)

for i in range(1, n + 1):
  nodes[i] = sorted(nodes[i], reverse = True)

visited = [False] * (n + 1)
result = [0] * (n + 1)
q = deque()
time = 1
result[r] = time

def bfs(idx):
  global time
  visited[idx] = True
  q.append(idx)

  while q:
    dq = q.popleft()
    for next_queue in nodes[dq]:
      if visited[next_queue] == False:
        time += 1
        result[next_queue] = time
        visited[next_queue] = True
        q.append(next_queue)

bfs(r)

for i in range(1, n + 1):
  print(result[i])