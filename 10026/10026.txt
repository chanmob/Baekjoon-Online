import sys

input=sys.stdin.readline

sys.setrecursionlimit(1000000)

n = int(input())
matrix = [list(input().rstrip()) for _ in range(n)]
visited = [[False] * n for _ in range(n)]

rgb_count = 0
rb_count = 0

dx = [-1, 1, 0, 0]
dy = [0, 0, -1, 1]

def dfs(x, y):
  visited[x][y] = True
  color = matrix[x][y]

  for i in range(4):
    nx = x + dx[i]
    ny = y + dy[i]

    if 0 <= nx < n and 0 <= ny < n:
      if visited[nx][ny] == False:
        if matrix[nx][ny] == color:
          dfs(nx, ny)

for i in range(n):
  for j in range(n):
    if visited[i][j] == False:
      dfs(i, j)
      rgb_count += 1

for i in range(n):
  for j in range(n):
    if matrix[i][j] == 'R':
      matrix[i][j] = 'G'

visited = [[False] * n for _ in range(n)]

for i in range(n):
  for j in range(n):
    if visited[i][j] == False:
      dfs(i, j)
      rb_count += 1

print(rgb_count, rb_count)