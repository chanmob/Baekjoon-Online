import sys
from collections import deque

input = sys.stdin.readline

t = int(input())

for _ in range(t):
    n, k = map(int, input().split())
    times = list(map(int, input().split()))
    indegrees = [0] * (n + 1)
    graph = [[] for _ in range(n + 1)]
    dp = [0] * (n + 1)
    
    for _ in range(k):
        x, y = map(int, input().split())
        graph[x].append(y)
        indegrees[y] += 1
    
    goal = int(input())
    queue = deque()
    
    for i in range(1, n + 1):
        if indegrees[i] == 0:
            queue.append(i)
            dp[i] = times[i - 1]
    
    while queue:
        q = queue.popleft()
        
        for g in graph[q]:
            indegrees[g] -= 1
            dp[g] = max(dp[q] + times[g - 1], dp[g])
            if indegrees[g] == 0:
                queue.append(g)
    
    print(dp[goal])