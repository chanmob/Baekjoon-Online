from collections import defaultdict, deque

def find_initial_infected(N, M, K, infected, logs):
    infected_set = set(infected)
    
    logs.sort()
    
    for potential_source in range(1, N + 1):
        queue = deque([potential_source])
        seen = {potential_source}
        
        log_index = 0
        
        while queue:
            current = queue.popleft()
            
            while log_index < M and logs[log_index][0] == logs[log_index][0]:
                t, a, b = logs[log_index]
                if a in seen and b not in seen:
                    seen.add(b)
                    queue.append(b)
                log_index += 1
        
        if seen == infected_set:
            return potential_source
    
    return -1

N, M, K = map(int, input().split())
infected = list(map(int, input().split()))
logs = []
for _ in range(M):
    t, a, b = map(int, input().split())
    logs.append((t, a, b))

print(find_initial_infected(N, M, K, infected, logs))