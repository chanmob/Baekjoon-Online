from collections import deque
import sys
import copy

input = sys.stdin.readline

N, M = map(int, input().split())
graphs = []
for _ in range(N):
    graphs.append(list(map(int, input().rstrip())))

visited = [[[0] * 2 for _ in range(M)] for _ in range(N)]
visited[0][0][0] = 1

mx = [0, 0, 1, -1]
my = [1, -1, 0, 0]

def BFS(x, y, z):
    queue = deque()
    queue.append((x, y, z))
    while queue:
        x, y, z = queue.popleft()
        
        if x == N - 1 and y == M - 1:
            return visited[x][y][z]

        for i in range(4):
            nx = x + mx[i]
            ny = y + my[i]
            
            if 0 <= nx < N and 0 <= ny < M:
                if graphs[nx][ny] == 1 and z == 0 :
                    visited[nx][ny][1] = visited[x][y][0] + 1
                    queue.append((nx, ny, 1))
    
                elif graphs[nx][ny] == 0 and visited[nx][ny][z] == 0:
                    visited[nx][ny][z] = visited[x][y][z] + 1
                    queue.append((nx, ny, z))
    return -1
        
print(BFS(0,0,0))
            