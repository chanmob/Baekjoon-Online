import sys
from collections import deque

sys.setrecursionlimit(int(1e6))

input = sys.stdin.readline

n, m, r = map(int, input().split())


nodes = []
for i in range(n + 1):
  nodes.append([])

for i in range(m):
  s, e = map(int, input().split())
  nodes[s].append(e)
  nodes[e].append(s)

for i in range(n):
  nodes[i] = sorted(nodes[i])

result = [0] * (n + 1)
result[r] = 1

def dfs(graph, start_node):
  time = 0
  visited = [False] * (n + 1)
  need_visited = deque()
  need_visited.append(start_node)
  
  while need_visited:
    node = need_visited.pop()
    if visited[node] == False:
      visited[node] = True
      time += 1
      result[node] = time
      need_visited.extend(graph[node])
  
  return visited

dfs(nodes, r)

for i in range(1, len(result)):
  print(result[i])